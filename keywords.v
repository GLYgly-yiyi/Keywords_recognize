// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="keywords,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z035ffg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.384850,HLS_SYN_LAT=8482451,HLS_SYN_TPT=none,HLS_SYN_MEM=294,HLS_SYN_DSP=176,HLS_SYN_FF=23075,HLS_SYN_LUT=42177,HLS_VERSION=2018_2}" *)

module keywords (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_Addr_A,
        input_r_EN_A,
        input_r_WEN_A,
        input_r_Din_A,
        input_r_Dout_A,
        input_r_Clk_A,
        input_r_Rst_A,
        result,
        result_ap_vld
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] input_r_Addr_A;
output   input_r_EN_A;
output  [3:0] input_r_WEN_A;
output  [31:0] input_r_Din_A;
input  [31:0] input_r_Dout_A;
output   input_r_Clk_A;
output   input_r_Rst_A;
output  [31:0] result;
output   result_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg result_ap_vld;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] w_0;
reg   [31:0] b_0;
reg   [12:0] bn_out_address0;
reg    bn_out_ce0;
reg    bn_out_we0;
wire   [31:0] bn_out_q0;
reg    bn_out_ce1;
wire   [31:0] bn_out_q1;
reg   [14:0] cnn_0_out_address0;
reg    cnn_0_out_ce0;
reg    cnn_0_out_we0;
wire   [31:0] cnn_0_out_q0;
reg   [14:0] eluout_0_address0;
reg    eluout_0_ce0;
reg    eluout_0_we0;
wire   [31:0] eluout_0_q0;
reg    eluout_0_ce1;
wire   [31:0] eluout_0_q1;
reg   [12:0] poolout_0_address0;
reg    poolout_0_ce0;
reg    poolout_0_we0;
wire   [31:0] poolout_0_q0;
reg    poolout_0_ce1;
wire   [31:0] poolout_0_q1;
reg   [13:0] cnn_1_out_address0;
reg    cnn_1_out_ce0;
reg    cnn_1_out_we0;
wire   [31:0] cnn_1_out_q0;
reg   [13:0] eluout_1_address0;
reg    eluout_1_ce0;
reg    eluout_1_we0;
wire   [31:0] eluout_1_q0;
reg    eluout_1_ce1;
wire   [31:0] eluout_1_q1;
reg   [11:0] poolout_1_address0;
reg    poolout_1_ce0;
reg    poolout_1_we0;
wire   [31:0] poolout_1_q0;
reg    poolout_1_ce1;
wire   [31:0] poolout_1_q1;
reg   [11:0] cnn_2_out_address0;
reg    cnn_2_out_ce0;
reg    cnn_2_out_we0;
wire   [31:0] cnn_2_out_q0;
reg   [11:0] eluout_2_address0;
reg    eluout_2_ce0;
reg    eluout_2_we0;
wire   [31:0] eluout_2_q0;
reg    eluout_2_ce1;
wire   [31:0] eluout_2_q1;
reg   [9:0] flatten_output_address0;
reg    flatten_output_ce0;
reg    flatten_output_we0;
wire   [31:0] flatten_output_q0;
reg   [2:0] softmax_out_address0;
reg    softmax_out_ce0;
reg    softmax_out_we0;
wire   [31:0] softmax_out_q0;
reg    softmax_out_ce1;
reg    softmax_out_we1;
wire   [31:0] softmax_out_q1;
reg   [2:0] tmp;
wire   [2:0] i_5_fu_342_p2;
reg   [2:0] i_5_reg_481;
wire    ap_CS_fsm_state23;
wire   [0:0] exitcond_fu_336_p2;
wire    grp_dense_0_lay_fu_180_ap_start;
wire    grp_dense_0_lay_fu_180_ap_done;
wire    grp_dense_0_lay_fu_180_ap_idle;
wire    grp_dense_0_lay_fu_180_ap_ready;
wire   [2:0] grp_dense_0_lay_fu_180_dense_1_out_address0;
wire    grp_dense_0_lay_fu_180_dense_1_out_ce0;
wire    grp_dense_0_lay_fu_180_dense_1_out_we0;
wire   [31:0] grp_dense_0_lay_fu_180_dense_1_out_d0;
wire   [2:0] grp_dense_0_lay_fu_180_dense_1_out_address1;
wire    grp_dense_0_lay_fu_180_dense_1_out_ce1;
wire    grp_dense_0_lay_fu_180_dense_1_out_we1;
wire   [31:0] grp_dense_0_lay_fu_180_dense_1_out_d1;
wire   [9:0] grp_dense_0_lay_fu_180_flatten_output_address0;
wire    grp_dense_0_lay_fu_180_flatten_output_ce0;
wire    grp_elu2_fu_192_ap_start;
wire    grp_elu2_fu_192_ap_done;
wire    grp_elu2_fu_192_ap_idle;
wire    grp_elu2_fu_192_ap_ready;
wire   [13:0] grp_elu2_fu_192_output_r_address0;
wire    grp_elu2_fu_192_output_r_ce0;
wire    grp_elu2_fu_192_output_r_we0;
wire   [31:0] grp_elu2_fu_192_output_r_d0;
wire   [13:0] grp_elu2_fu_192_cnn_1_out_address0;
wire    grp_elu2_fu_192_cnn_1_out_ce0;
wire    grp_elu1_fu_200_ap_start;
wire    grp_elu1_fu_200_ap_done;
wire    grp_elu1_fu_200_ap_idle;
wire    grp_elu1_fu_200_ap_ready;
wire   [14:0] grp_elu1_fu_200_output_r_address0;
wire    grp_elu1_fu_200_output_r_ce0;
wire    grp_elu1_fu_200_output_r_we0;
wire   [31:0] grp_elu1_fu_200_output_r_d0;
wire   [14:0] grp_elu1_fu_200_cnn_0_out_address0;
wire    grp_elu1_fu_200_cnn_0_out_ce0;
wire    grp_elu3_fu_208_ap_start;
wire    grp_elu3_fu_208_ap_done;
wire    grp_elu3_fu_208_ap_idle;
wire    grp_elu3_fu_208_ap_ready;
wire   [11:0] grp_elu3_fu_208_output_r_address0;
wire    grp_elu3_fu_208_output_r_ce0;
wire    grp_elu3_fu_208_output_r_we0;
wire   [31:0] grp_elu3_fu_208_output_r_d0;
wire   [11:0] grp_elu3_fu_208_cnn_2_out_address0;
wire    grp_elu3_fu_208_cnn_2_out_ce0;
wire    grp_maxpolling3_fu_216_ap_start;
wire    grp_maxpolling3_fu_216_ap_done;
wire    grp_maxpolling3_fu_216_ap_idle;
wire    grp_maxpolling3_fu_216_ap_ready;
wire   [9:0] grp_maxpolling3_fu_216_flatten_output_address0;
wire    grp_maxpolling3_fu_216_flatten_output_ce0;
wire    grp_maxpolling3_fu_216_flatten_output_we0;
wire   [31:0] grp_maxpolling3_fu_216_flatten_output_d0;
wire   [11:0] grp_maxpolling3_fu_216_eluout_2_address0;
wire    grp_maxpolling3_fu_216_eluout_2_ce0;
wire   [11:0] grp_maxpolling3_fu_216_eluout_2_address1;
wire    grp_maxpolling3_fu_216_eluout_2_ce1;
wire    grp_cnn_2_fu_226_ap_start;
wire    grp_cnn_2_fu_226_ap_done;
wire    grp_cnn_2_fu_226_ap_idle;
wire    grp_cnn_2_fu_226_ap_ready;
wire   [13:0] grp_cnn_2_fu_226_output_r_address0;
wire    grp_cnn_2_fu_226_output_r_ce0;
wire    grp_cnn_2_fu_226_output_r_we0;
wire   [31:0] grp_cnn_2_fu_226_output_r_d0;
wire   [12:0] grp_cnn_2_fu_226_poolout_0_address0;
wire    grp_cnn_2_fu_226_poolout_0_ce0;
wire   [12:0] grp_cnn_2_fu_226_poolout_0_address1;
wire    grp_cnn_2_fu_226_poolout_0_ce1;
wire    grp_cnn_3_fu_254_ap_start;
wire    grp_cnn_3_fu_254_ap_done;
wire    grp_cnn_3_fu_254_ap_idle;
wire    grp_cnn_3_fu_254_ap_ready;
wire   [11:0] grp_cnn_3_fu_254_output_r_address0;
wire    grp_cnn_3_fu_254_output_r_ce0;
wire    grp_cnn_3_fu_254_output_r_we0;
wire   [31:0] grp_cnn_3_fu_254_output_r_d0;
wire   [11:0] grp_cnn_3_fu_254_poolout_1_address0;
wire    grp_cnn_3_fu_254_poolout_1_ce0;
wire   [11:0] grp_cnn_3_fu_254_poolout_1_address1;
wire    grp_cnn_3_fu_254_poolout_1_ce1;
wire    grp_maxpolling1_fu_282_ap_start;
wire    grp_maxpolling1_fu_282_ap_done;
wire    grp_maxpolling1_fu_282_ap_idle;
wire    grp_maxpolling1_fu_282_ap_ready;
wire   [12:0] grp_maxpolling1_fu_282_output_r_address0;
wire    grp_maxpolling1_fu_282_output_r_ce0;
wire    grp_maxpolling1_fu_282_output_r_we0;
wire   [31:0] grp_maxpolling1_fu_282_output_r_d0;
wire   [14:0] grp_maxpolling1_fu_282_eluout_0_address0;
wire    grp_maxpolling1_fu_282_eluout_0_ce0;
wire   [14:0] grp_maxpolling1_fu_282_eluout_0_address1;
wire    grp_maxpolling1_fu_282_eluout_0_ce1;
wire    grp_maxpolling2_fu_290_ap_start;
wire    grp_maxpolling2_fu_290_ap_done;
wire    grp_maxpolling2_fu_290_ap_idle;
wire    grp_maxpolling2_fu_290_ap_ready;
wire   [11:0] grp_maxpolling2_fu_290_output_r_address0;
wire    grp_maxpolling2_fu_290_output_r_ce0;
wire    grp_maxpolling2_fu_290_output_r_we0;
wire   [31:0] grp_maxpolling2_fu_290_output_r_d0;
wire   [13:0] grp_maxpolling2_fu_290_eluout_1_address0;
wire    grp_maxpolling2_fu_290_eluout_1_ce0;
wire   [13:0] grp_maxpolling2_fu_290_eluout_1_address1;
wire    grp_maxpolling2_fu_290_eluout_1_ce1;
wire    grp_cnn_1_fu_298_ap_start;
wire    grp_cnn_1_fu_298_ap_done;
wire    grp_cnn_1_fu_298_ap_idle;
wire    grp_cnn_1_fu_298_ap_ready;
wire   [12:0] grp_cnn_1_fu_298_input_r_address0;
wire    grp_cnn_1_fu_298_input_r_ce0;
wire   [12:0] grp_cnn_1_fu_298_input_r_address1;
wire    grp_cnn_1_fu_298_input_r_ce1;
wire   [14:0] grp_cnn_1_fu_298_output_r_address0;
wire    grp_cnn_1_fu_298_output_r_ce0;
wire    grp_cnn_1_fu_298_output_r_we0;
wire   [31:0] grp_cnn_1_fu_298_output_r_d0;
wire    grp_bn_fu_306_ap_start;
wire    grp_bn_fu_306_ap_done;
wire    grp_bn_fu_306_ap_idle;
wire    grp_bn_fu_306_ap_ready;
wire   [31:0] grp_bn_fu_306_input_r_Addr_A;
wire    grp_bn_fu_306_input_r_EN_A;
wire   [3:0] grp_bn_fu_306_input_r_WEN_A;
wire   [31:0] grp_bn_fu_306_input_r_Din_A;
wire   [12:0] grp_bn_fu_306_bn_out_address0;
wire    grp_bn_fu_306_bn_out_ce0;
wire    grp_bn_fu_306_bn_out_we0;
wire   [31:0] grp_bn_fu_306_bn_out_d0;
reg   [2:0] i_reg_168;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
reg    grp_dense_0_lay_fu_180_ap_start_reg;
wire    ap_CS_fsm_state21;
reg    grp_elu2_fu_192_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_elu1_fu_200_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_elu3_fu_208_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    grp_maxpolling3_fu_216_ap_start_reg;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg    grp_cnn_2_fu_226_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_cnn_3_fu_254_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg    grp_maxpolling1_fu_282_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_maxpolling2_fu_290_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_cnn_1_fu_298_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_bn_fu_306_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_1_2_fu_348_p1;
wire   [0:0] tmp_9_fu_444_p2;
reg   [31:0] max_fu_144;
wire   [31:0] max_2_to_int_fu_366_p1;
wire   [31:0] max_to_int_fu_384_p1;
wire   [7:0] tmp_1_fu_370_p4;
wire   [22:0] tmp_1_5_fu_380_p1;
wire   [0:0] notrhs_fu_408_p2;
wire   [0:0] notlhs_fu_402_p2;
wire   [7:0] tmp_3_fu_388_p4;
wire   [22:0] tmp_39_fu_398_p1;
wire   [0:0] notrhs3_fu_426_p2;
wire   [0:0] notlhs2_fu_420_p2;
wire   [0:0] tmp_5_fu_414_p2;
wire   [0:0] tmp_6_fu_432_p2;
wire   [0:0] tmp_7_fu_438_p2;
wire   [0:0] tmp_8_fu_316_p2;
reg   [23:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 w_0 = 32'd1049747050;
#0 b_0 = 32'd3222180934;
#0 tmp = 3'd0;
#0 grp_dense_0_lay_fu_180_ap_start_reg = 1'b0;
#0 grp_elu2_fu_192_ap_start_reg = 1'b0;
#0 grp_elu1_fu_200_ap_start_reg = 1'b0;
#0 grp_elu3_fu_208_ap_start_reg = 1'b0;
#0 grp_maxpolling3_fu_216_ap_start_reg = 1'b0;
#0 grp_cnn_2_fu_226_ap_start_reg = 1'b0;
#0 grp_cnn_3_fu_254_ap_start_reg = 1'b0;
#0 grp_maxpolling1_fu_282_ap_start_reg = 1'b0;
#0 grp_maxpolling2_fu_290_ap_start_reg = 1'b0;
#0 grp_cnn_1_fu_298_ap_start_reg = 1'b0;
#0 grp_bn_fu_306_ap_start_reg = 1'b0;
end

keywords_bn_out #(
    .DataWidth( 32 ),
    .AddressRange( 6400 ),
    .AddressWidth( 13 ))
bn_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bn_out_address0),
    .ce0(bn_out_ce0),
    .we0(bn_out_we0),
    .d0(grp_bn_fu_306_bn_out_d0),
    .q0(bn_out_q0),
    .address1(grp_cnn_1_fu_298_input_r_address1),
    .ce1(bn_out_ce1),
    .q1(bn_out_q1)
);

keywords_cnn_0_out #(
    .DataWidth( 32 ),
    .AddressRange( 24304 ),
    .AddressWidth( 15 ))
cnn_0_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cnn_0_out_address0),
    .ce0(cnn_0_out_ce0),
    .we0(cnn_0_out_we0),
    .d0(grp_cnn_1_fu_298_output_r_d0),
    .q0(cnn_0_out_q0)
);

keywords_eluout_0 #(
    .DataWidth( 32 ),
    .AddressRange( 24304 ),
    .AddressWidth( 15 ))
eluout_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eluout_0_address0),
    .ce0(eluout_0_ce0),
    .we0(eluout_0_we0),
    .d0(grp_elu1_fu_200_output_r_d0),
    .q0(eluout_0_q0),
    .address1(grp_maxpolling1_fu_282_eluout_0_address1),
    .ce1(eluout_0_ce1),
    .q1(eluout_0_q1)
);

keywords_poolout_0 #(
    .DataWidth( 32 ),
    .AddressRange( 6076 ),
    .AddressWidth( 13 ))
poolout_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(poolout_0_address0),
    .ce0(poolout_0_ce0),
    .we0(poolout_0_we0),
    .d0(grp_maxpolling1_fu_282_output_r_d0),
    .q0(poolout_0_q0),
    .address1(grp_cnn_2_fu_226_poolout_0_address1),
    .ce1(poolout_0_ce1),
    .q1(poolout_0_q1)
);

keywords_cnn_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 10904 ),
    .AddressWidth( 14 ))
cnn_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cnn_1_out_address0),
    .ce0(cnn_1_out_ce0),
    .we0(cnn_1_out_we0),
    .d0(grp_cnn_2_fu_226_output_r_d0),
    .q0(cnn_1_out_q0)
);

keywords_eluout_1 #(
    .DataWidth( 32 ),
    .AddressRange( 10904 ),
    .AddressWidth( 14 ))
eluout_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eluout_1_address0),
    .ce0(eluout_1_ce0),
    .we0(eluout_1_we0),
    .d0(grp_elu2_fu_192_output_r_d0),
    .q0(eluout_1_q0),
    .address1(grp_maxpolling2_fu_290_eluout_1_address1),
    .ce1(eluout_1_ce1),
    .q1(eluout_1_q1)
);

keywords_poolout_1 #(
    .DataWidth( 32 ),
    .AddressRange( 2576 ),
    .AddressWidth( 12 ))
poolout_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(poolout_1_address0),
    .ce0(poolout_1_ce0),
    .we0(poolout_1_we0),
    .d0(grp_maxpolling2_fu_290_output_r_d0),
    .q0(poolout_1_q0),
    .address1(grp_cnn_3_fu_254_poolout_1_address1),
    .ce1(poolout_1_ce1),
    .q1(poolout_1_q1)
);

keywords_cnn_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 4032 ),
    .AddressWidth( 12 ))
cnn_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cnn_2_out_address0),
    .ce0(cnn_2_out_ce0),
    .we0(cnn_2_out_we0),
    .d0(grp_cnn_3_fu_254_output_r_d0),
    .q0(cnn_2_out_q0)
);

keywords_eluout_2 #(
    .DataWidth( 32 ),
    .AddressRange( 4032 ),
    .AddressWidth( 12 ))
eluout_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eluout_2_address0),
    .ce0(eluout_2_ce0),
    .we0(eluout_2_we0),
    .d0(grp_elu3_fu_208_output_r_d0),
    .q0(eluout_2_q0),
    .address1(grp_maxpolling3_fu_216_eluout_2_address1),
    .ce1(eluout_2_ce1),
    .q1(eluout_2_q1)
);

maxpolling3_poolojbC #(
    .DataWidth( 32 ),
    .AddressRange( 960 ),
    .AddressWidth( 10 ))
flatten_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(flatten_output_address0),
    .ce0(flatten_output_ce0),
    .we0(flatten_output_we0),
    .d0(grp_maxpolling3_fu_216_flatten_output_d0),
    .q0(flatten_output_q0)
);

keywords_softmax_ocq #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
softmax_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(softmax_out_address0),
    .ce0(softmax_out_ce0),
    .we0(softmax_out_we0),
    .d0(grp_dense_0_lay_fu_180_dense_1_out_d0),
    .q0(softmax_out_q0),
    .address1(grp_dense_0_lay_fu_180_dense_1_out_address1),
    .ce1(softmax_out_ce1),
    .we1(softmax_out_we1),
    .d1(grp_dense_0_lay_fu_180_dense_1_out_d1),
    .q1(softmax_out_q1)
);

dense_0_lay grp_dense_0_lay_fu_180(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_0_lay_fu_180_ap_start),
    .ap_done(grp_dense_0_lay_fu_180_ap_done),
    .ap_idle(grp_dense_0_lay_fu_180_ap_idle),
    .ap_ready(grp_dense_0_lay_fu_180_ap_ready),
    .dense_1_out_address0(grp_dense_0_lay_fu_180_dense_1_out_address0),
    .dense_1_out_ce0(grp_dense_0_lay_fu_180_dense_1_out_ce0),
    .dense_1_out_we0(grp_dense_0_lay_fu_180_dense_1_out_we0),
    .dense_1_out_d0(grp_dense_0_lay_fu_180_dense_1_out_d0),
    .dense_1_out_q0(softmax_out_q0),
    .dense_1_out_address1(grp_dense_0_lay_fu_180_dense_1_out_address1),
    .dense_1_out_ce1(grp_dense_0_lay_fu_180_dense_1_out_ce1),
    .dense_1_out_we1(grp_dense_0_lay_fu_180_dense_1_out_we1),
    .dense_1_out_d1(grp_dense_0_lay_fu_180_dense_1_out_d1),
    .dense_1_out_q1(softmax_out_q1),
    .flatten_output_address0(grp_dense_0_lay_fu_180_flatten_output_address0),
    .flatten_output_ce0(grp_dense_0_lay_fu_180_flatten_output_ce0),
    .flatten_output_q0(flatten_output_q0)
);

elu2 grp_elu2_fu_192(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_elu2_fu_192_ap_start),
    .ap_done(grp_elu2_fu_192_ap_done),
    .ap_idle(grp_elu2_fu_192_ap_idle),
    .ap_ready(grp_elu2_fu_192_ap_ready),
    .output_r_address0(grp_elu2_fu_192_output_r_address0),
    .output_r_ce0(grp_elu2_fu_192_output_r_ce0),
    .output_r_we0(grp_elu2_fu_192_output_r_we0),
    .output_r_d0(grp_elu2_fu_192_output_r_d0),
    .cnn_1_out_address0(grp_elu2_fu_192_cnn_1_out_address0),
    .cnn_1_out_ce0(grp_elu2_fu_192_cnn_1_out_ce0),
    .cnn_1_out_q0(cnn_1_out_q0)
);

elu1 grp_elu1_fu_200(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_elu1_fu_200_ap_start),
    .ap_done(grp_elu1_fu_200_ap_done),
    .ap_idle(grp_elu1_fu_200_ap_idle),
    .ap_ready(grp_elu1_fu_200_ap_ready),
    .output_r_address0(grp_elu1_fu_200_output_r_address0),
    .output_r_ce0(grp_elu1_fu_200_output_r_ce0),
    .output_r_we0(grp_elu1_fu_200_output_r_we0),
    .output_r_d0(grp_elu1_fu_200_output_r_d0),
    .cnn_0_out_address0(grp_elu1_fu_200_cnn_0_out_address0),
    .cnn_0_out_ce0(grp_elu1_fu_200_cnn_0_out_ce0),
    .cnn_0_out_q0(cnn_0_out_q0)
);

elu3 grp_elu3_fu_208(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_elu3_fu_208_ap_start),
    .ap_done(grp_elu3_fu_208_ap_done),
    .ap_idle(grp_elu3_fu_208_ap_idle),
    .ap_ready(grp_elu3_fu_208_ap_ready),
    .output_r_address0(grp_elu3_fu_208_output_r_address0),
    .output_r_ce0(grp_elu3_fu_208_output_r_ce0),
    .output_r_we0(grp_elu3_fu_208_output_r_we0),
    .output_r_d0(grp_elu3_fu_208_output_r_d0),
    .cnn_2_out_address0(grp_elu3_fu_208_cnn_2_out_address0),
    .cnn_2_out_ce0(grp_elu3_fu_208_cnn_2_out_ce0),
    .cnn_2_out_q0(cnn_2_out_q0)
);

maxpolling3 grp_maxpolling3_fu_216(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_maxpolling3_fu_216_ap_start),
    .ap_done(grp_maxpolling3_fu_216_ap_done),
    .ap_idle(grp_maxpolling3_fu_216_ap_idle),
    .ap_ready(grp_maxpolling3_fu_216_ap_ready),
    .flatten_output_address0(grp_maxpolling3_fu_216_flatten_output_address0),
    .flatten_output_ce0(grp_maxpolling3_fu_216_flatten_output_ce0),
    .flatten_output_we0(grp_maxpolling3_fu_216_flatten_output_we0),
    .flatten_output_d0(grp_maxpolling3_fu_216_flatten_output_d0),
    .eluout_2_address0(grp_maxpolling3_fu_216_eluout_2_address0),
    .eluout_2_ce0(grp_maxpolling3_fu_216_eluout_2_ce0),
    .eluout_2_q0(eluout_2_q0),
    .eluout_2_address1(grp_maxpolling3_fu_216_eluout_2_address1),
    .eluout_2_ce1(grp_maxpolling3_fu_216_eluout_2_ce1),
    .eluout_2_q1(eluout_2_q1)
);

cnn_2 grp_cnn_2_fu_226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnn_2_fu_226_ap_start),
    .ap_done(grp_cnn_2_fu_226_ap_done),
    .ap_idle(grp_cnn_2_fu_226_ap_idle),
    .ap_ready(grp_cnn_2_fu_226_ap_ready),
    .output_r_address0(grp_cnn_2_fu_226_output_r_address0),
    .output_r_ce0(grp_cnn_2_fu_226_output_r_ce0),
    .output_r_we0(grp_cnn_2_fu_226_output_r_we0),
    .output_r_d0(grp_cnn_2_fu_226_output_r_d0),
    .output_r_q0(cnn_1_out_q0),
    .poolout_0_address0(grp_cnn_2_fu_226_poolout_0_address0),
    .poolout_0_ce0(grp_cnn_2_fu_226_poolout_0_ce0),
    .poolout_0_q0(poolout_0_q0),
    .poolout_0_address1(grp_cnn_2_fu_226_poolout_0_address1),
    .poolout_0_ce1(grp_cnn_2_fu_226_poolout_0_ce1),
    .poolout_0_q1(poolout_0_q1)
);

cnn_3 grp_cnn_3_fu_254(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnn_3_fu_254_ap_start),
    .ap_done(grp_cnn_3_fu_254_ap_done),
    .ap_idle(grp_cnn_3_fu_254_ap_idle),
    .ap_ready(grp_cnn_3_fu_254_ap_ready),
    .output_r_address0(grp_cnn_3_fu_254_output_r_address0),
    .output_r_ce0(grp_cnn_3_fu_254_output_r_ce0),
    .output_r_we0(grp_cnn_3_fu_254_output_r_we0),
    .output_r_d0(grp_cnn_3_fu_254_output_r_d0),
    .output_r_q0(cnn_2_out_q0),
    .poolout_1_address0(grp_cnn_3_fu_254_poolout_1_address0),
    .poolout_1_ce0(grp_cnn_3_fu_254_poolout_1_ce0),
    .poolout_1_q0(poolout_1_q0),
    .poolout_1_address1(grp_cnn_3_fu_254_poolout_1_address1),
    .poolout_1_ce1(grp_cnn_3_fu_254_poolout_1_ce1),
    .poolout_1_q1(poolout_1_q1)
);

maxpolling1 grp_maxpolling1_fu_282(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_maxpolling1_fu_282_ap_start),
    .ap_done(grp_maxpolling1_fu_282_ap_done),
    .ap_idle(grp_maxpolling1_fu_282_ap_idle),
    .ap_ready(grp_maxpolling1_fu_282_ap_ready),
    .output_r_address0(grp_maxpolling1_fu_282_output_r_address0),
    .output_r_ce0(grp_maxpolling1_fu_282_output_r_ce0),
    .output_r_we0(grp_maxpolling1_fu_282_output_r_we0),
    .output_r_d0(grp_maxpolling1_fu_282_output_r_d0),
    .eluout_0_address0(grp_maxpolling1_fu_282_eluout_0_address0),
    .eluout_0_ce0(grp_maxpolling1_fu_282_eluout_0_ce0),
    .eluout_0_q0(eluout_0_q0),
    .eluout_0_address1(grp_maxpolling1_fu_282_eluout_0_address1),
    .eluout_0_ce1(grp_maxpolling1_fu_282_eluout_0_ce1),
    .eluout_0_q1(eluout_0_q1)
);

maxpolling2 grp_maxpolling2_fu_290(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_maxpolling2_fu_290_ap_start),
    .ap_done(grp_maxpolling2_fu_290_ap_done),
    .ap_idle(grp_maxpolling2_fu_290_ap_idle),
    .ap_ready(grp_maxpolling2_fu_290_ap_ready),
    .output_r_address0(grp_maxpolling2_fu_290_output_r_address0),
    .output_r_ce0(grp_maxpolling2_fu_290_output_r_ce0),
    .output_r_we0(grp_maxpolling2_fu_290_output_r_we0),
    .output_r_d0(grp_maxpolling2_fu_290_output_r_d0),
    .eluout_1_address0(grp_maxpolling2_fu_290_eluout_1_address0),
    .eluout_1_ce0(grp_maxpolling2_fu_290_eluout_1_ce0),
    .eluout_1_q0(eluout_1_q0),
    .eluout_1_address1(grp_maxpolling2_fu_290_eluout_1_address1),
    .eluout_1_ce1(grp_maxpolling2_fu_290_eluout_1_ce1),
    .eluout_1_q1(eluout_1_q1)
);

cnn_1 grp_cnn_1_fu_298(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnn_1_fu_298_ap_start),
    .ap_done(grp_cnn_1_fu_298_ap_done),
    .ap_idle(grp_cnn_1_fu_298_ap_idle),
    .ap_ready(grp_cnn_1_fu_298_ap_ready),
    .input_r_address0(grp_cnn_1_fu_298_input_r_address0),
    .input_r_ce0(grp_cnn_1_fu_298_input_r_ce0),
    .input_r_q0(bn_out_q0),
    .input_r_address1(grp_cnn_1_fu_298_input_r_address1),
    .input_r_ce1(grp_cnn_1_fu_298_input_r_ce1),
    .input_r_q1(bn_out_q1),
    .output_r_address0(grp_cnn_1_fu_298_output_r_address0),
    .output_r_ce0(grp_cnn_1_fu_298_output_r_ce0),
    .output_r_we0(grp_cnn_1_fu_298_output_r_we0),
    .output_r_d0(grp_cnn_1_fu_298_output_r_d0),
    .output_r_q0(cnn_0_out_q0)
);

bn grp_bn_fu_306(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_bn_fu_306_ap_start),
    .ap_done(grp_bn_fu_306_ap_done),
    .ap_idle(grp_bn_fu_306_ap_idle),
    .ap_ready(grp_bn_fu_306_ap_ready),
    .input_r_Addr_A(grp_bn_fu_306_input_r_Addr_A),
    .input_r_EN_A(grp_bn_fu_306_input_r_EN_A),
    .input_r_WEN_A(grp_bn_fu_306_input_r_WEN_A),
    .input_r_Din_A(grp_bn_fu_306_input_r_Din_A),
    .input_r_Dout_A(input_r_Dout_A),
    .w_0(w_0),
    .b_0(b_0),
    .bn_out_address0(grp_bn_fu_306_bn_out_address0),
    .bn_out_ce0(grp_bn_fu_306_bn_out_ce0),
    .bn_out_we0(grp_bn_fu_306_bn_out_we0),
    .bn_out_d0(grp_bn_fu_306_bn_out_d0)
);

keywords_fcmp_32ng8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
keywords_fcmp_32ng8j_U119(
    .din0(softmax_out_q0),
    .din1(max_fu_144),
    .opcode(5'd2),
    .dout(tmp_8_fu_316_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_bn_fu_306_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_bn_fu_306_ap_start_reg <= 1'b1;
        end else if ((grp_bn_fu_306_ap_ready == 1'b1)) begin
            grp_bn_fu_306_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnn_1_fu_298_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_cnn_1_fu_298_ap_start_reg <= 1'b1;
        end else if ((grp_cnn_1_fu_298_ap_ready == 1'b1)) begin
            grp_cnn_1_fu_298_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnn_2_fu_226_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_cnn_2_fu_226_ap_start_reg <= 1'b1;
        end else if ((grp_cnn_2_fu_226_ap_ready == 1'b1)) begin
            grp_cnn_2_fu_226_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnn_3_fu_254_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_cnn_3_fu_254_ap_start_reg <= 1'b1;
        end else if ((grp_cnn_3_fu_254_ap_ready == 1'b1)) begin
            grp_cnn_3_fu_254_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_0_lay_fu_180_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_dense_0_lay_fu_180_ap_start_reg <= 1'b1;
        end else if ((grp_dense_0_lay_fu_180_ap_ready == 1'b1)) begin
            grp_dense_0_lay_fu_180_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_elu1_fu_200_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_elu1_fu_200_ap_start_reg <= 1'b1;
        end else if ((grp_elu1_fu_200_ap_ready == 1'b1)) begin
            grp_elu1_fu_200_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_elu2_fu_192_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_elu2_fu_192_ap_start_reg <= 1'b1;
        end else if ((grp_elu2_fu_192_ap_ready == 1'b1)) begin
            grp_elu2_fu_192_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_elu3_fu_208_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_elu3_fu_208_ap_start_reg <= 1'b1;
        end else if ((grp_elu3_fu_208_ap_ready == 1'b1)) begin
            grp_elu3_fu_208_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_maxpolling1_fu_282_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_maxpolling1_fu_282_ap_start_reg <= 1'b1;
        end else if ((grp_maxpolling1_fu_282_ap_ready == 1'b1)) begin
            grp_maxpolling1_fu_282_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_maxpolling2_fu_290_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_maxpolling2_fu_290_ap_start_reg <= 1'b1;
        end else if ((grp_maxpolling2_fu_290_ap_ready == 1'b1)) begin
            grp_maxpolling2_fu_290_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_maxpolling3_fu_216_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            grp_maxpolling3_fu_216_ap_start_reg <= 1'b1;
        end else if ((grp_maxpolling3_fu_216_ap_ready == 1'b1)) begin
            grp_maxpolling3_fu_216_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_reg_168 <= i_5_reg_481;
    end else if (((grp_dense_0_lay_fu_180_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        i_reg_168 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        max_fu_144 <= softmax_out_q0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        max_fu_144 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_5_reg_481 <= i_5_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        tmp <= i_reg_168;
    end
end

always @ (*) begin
    if (((exitcond_fu_336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bn_out_address0 = grp_bn_fu_306_bn_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bn_out_address0 = grp_cnn_1_fu_298_input_r_address0;
    end else begin
        bn_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bn_out_ce0 = grp_bn_fu_306_bn_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bn_out_ce0 = grp_cnn_1_fu_298_input_r_ce0;
    end else begin
        bn_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bn_out_ce1 = grp_cnn_1_fu_298_input_r_ce1;
    end else begin
        bn_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bn_out_we0 = grp_bn_fu_306_bn_out_we0;
    end else begin
        bn_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_0_out_address0 = grp_cnn_1_fu_298_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        cnn_0_out_address0 = grp_elu1_fu_200_cnn_0_out_address0;
    end else begin
        cnn_0_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_0_out_ce0 = grp_cnn_1_fu_298_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        cnn_0_out_ce0 = grp_elu1_fu_200_cnn_0_out_ce0;
    end else begin
        cnn_0_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_0_out_we0 = grp_cnn_1_fu_298_output_r_we0;
    end else begin
        cnn_0_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cnn_1_out_address0 = grp_cnn_2_fu_226_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        cnn_1_out_address0 = grp_elu2_fu_192_cnn_1_out_address0;
    end else begin
        cnn_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cnn_1_out_ce0 = grp_cnn_2_fu_226_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        cnn_1_out_ce0 = grp_elu2_fu_192_cnn_1_out_ce0;
    end else begin
        cnn_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cnn_1_out_we0 = grp_cnn_2_fu_226_output_r_we0;
    end else begin
        cnn_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        cnn_2_out_address0 = grp_cnn_3_fu_254_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        cnn_2_out_address0 = grp_elu3_fu_208_cnn_2_out_address0;
    end else begin
        cnn_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        cnn_2_out_ce0 = grp_cnn_3_fu_254_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        cnn_2_out_ce0 = grp_elu3_fu_208_cnn_2_out_ce0;
    end else begin
        cnn_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        cnn_2_out_we0 = grp_cnn_3_fu_254_output_r_we0;
    end else begin
        cnn_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        eluout_0_address0 = grp_maxpolling1_fu_282_eluout_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        eluout_0_address0 = grp_elu1_fu_200_output_r_address0;
    end else begin
        eluout_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        eluout_0_ce0 = grp_maxpolling1_fu_282_eluout_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        eluout_0_ce0 = grp_elu1_fu_200_output_r_ce0;
    end else begin
        eluout_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        eluout_0_ce1 = grp_maxpolling1_fu_282_eluout_0_ce1;
    end else begin
        eluout_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        eluout_0_we0 = grp_elu1_fu_200_output_r_we0;
    end else begin
        eluout_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        eluout_1_address0 = grp_maxpolling2_fu_290_eluout_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eluout_1_address0 = grp_elu2_fu_192_output_r_address0;
    end else begin
        eluout_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        eluout_1_ce0 = grp_maxpolling2_fu_290_eluout_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eluout_1_ce0 = grp_elu2_fu_192_output_r_ce0;
    end else begin
        eluout_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        eluout_1_ce1 = grp_maxpolling2_fu_290_eluout_1_ce1;
    end else begin
        eluout_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        eluout_1_we0 = grp_elu2_fu_192_output_r_we0;
    end else begin
        eluout_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        eluout_2_address0 = grp_maxpolling3_fu_216_eluout_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        eluout_2_address0 = grp_elu3_fu_208_output_r_address0;
    end else begin
        eluout_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        eluout_2_ce0 = grp_maxpolling3_fu_216_eluout_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        eluout_2_ce0 = grp_elu3_fu_208_output_r_ce0;
    end else begin
        eluout_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        eluout_2_ce1 = grp_maxpolling3_fu_216_eluout_2_ce1;
    end else begin
        eluout_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        eluout_2_we0 = grp_elu3_fu_208_output_r_we0;
    end else begin
        eluout_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        flatten_output_address0 = grp_maxpolling3_fu_216_flatten_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        flatten_output_address0 = grp_dense_0_lay_fu_180_flatten_output_address0;
    end else begin
        flatten_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        flatten_output_ce0 = grp_maxpolling3_fu_216_flatten_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        flatten_output_ce0 = grp_dense_0_lay_fu_180_flatten_output_ce0;
    end else begin
        flatten_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        flatten_output_we0 = grp_maxpolling3_fu_216_flatten_output_we0;
    end else begin
        flatten_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        poolout_0_address0 = grp_maxpolling1_fu_282_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        poolout_0_address0 = grp_cnn_2_fu_226_poolout_0_address0;
    end else begin
        poolout_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        poolout_0_ce0 = grp_maxpolling1_fu_282_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        poolout_0_ce0 = grp_cnn_2_fu_226_poolout_0_ce0;
    end else begin
        poolout_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        poolout_0_ce1 = grp_cnn_2_fu_226_poolout_0_ce1;
    end else begin
        poolout_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        poolout_0_we0 = grp_maxpolling1_fu_282_output_r_we0;
    end else begin
        poolout_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        poolout_1_address0 = grp_maxpolling2_fu_290_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        poolout_1_address0 = grp_cnn_3_fu_254_poolout_1_address0;
    end else begin
        poolout_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        poolout_1_ce0 = grp_maxpolling2_fu_290_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        poolout_1_ce0 = grp_cnn_3_fu_254_poolout_1_ce0;
    end else begin
        poolout_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        poolout_1_ce1 = grp_cnn_3_fu_254_poolout_1_ce1;
    end else begin
        poolout_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        poolout_1_we0 = grp_maxpolling2_fu_290_output_r_we0;
    end else begin
        poolout_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        result_ap_vld = 1'b1;
    end else begin
        result_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        softmax_out_address0 = tmp_1_2_fu_348_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        softmax_out_address0 = grp_dense_0_lay_fu_180_dense_1_out_address0;
    end else begin
        softmax_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        softmax_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        softmax_out_ce0 = grp_dense_0_lay_fu_180_dense_1_out_ce0;
    end else begin
        softmax_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        softmax_out_ce1 = grp_dense_0_lay_fu_180_dense_1_out_ce1;
    end else begin
        softmax_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        softmax_out_we0 = grp_dense_0_lay_fu_180_dense_1_out_we0;
    end else begin
        softmax_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        softmax_out_we1 = grp_dense_0_lay_fu_180_dense_1_out_we1;
    end else begin
        softmax_out_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_bn_fu_306_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_cnn_1_fu_298_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_elu1_fu_200_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_maxpolling1_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_cnn_2_fu_226_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_elu2_fu_192_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_maxpolling2_fu_290_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_cnn_3_fu_254_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_elu3_fu_208_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_maxpolling3_fu_216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_dense_0_lay_fu_180_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((exitcond_fu_336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond_fu_336_p2 = ((i_reg_168 == 3'd6) ? 1'b1 : 1'b0);

assign grp_bn_fu_306_ap_start = grp_bn_fu_306_ap_start_reg;

assign grp_cnn_1_fu_298_ap_start = grp_cnn_1_fu_298_ap_start_reg;

assign grp_cnn_2_fu_226_ap_start = grp_cnn_2_fu_226_ap_start_reg;

assign grp_cnn_3_fu_254_ap_start = grp_cnn_3_fu_254_ap_start_reg;

assign grp_dense_0_lay_fu_180_ap_start = grp_dense_0_lay_fu_180_ap_start_reg;

assign grp_elu1_fu_200_ap_start = grp_elu1_fu_200_ap_start_reg;

assign grp_elu2_fu_192_ap_start = grp_elu2_fu_192_ap_start_reg;

assign grp_elu3_fu_208_ap_start = grp_elu3_fu_208_ap_start_reg;

assign grp_maxpolling1_fu_282_ap_start = grp_maxpolling1_fu_282_ap_start_reg;

assign grp_maxpolling2_fu_290_ap_start = grp_maxpolling2_fu_290_ap_start_reg;

assign grp_maxpolling3_fu_216_ap_start = grp_maxpolling3_fu_216_ap_start_reg;

assign i_5_fu_342_p2 = (i_reg_168 + 3'd1);

assign input_r_Addr_A = grp_bn_fu_306_input_r_Addr_A;

assign input_r_Clk_A = ap_clk;

assign input_r_Din_A = 32'd0;

assign input_r_EN_A = grp_bn_fu_306_input_r_EN_A;

assign input_r_Rst_A = ap_rst;

assign input_r_WEN_A = 4'd0;

assign max_2_to_int_fu_366_p1 = softmax_out_q0;

assign max_to_int_fu_384_p1 = max_fu_144;

assign notlhs2_fu_420_p2 = ((tmp_3_fu_388_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_402_p2 = ((tmp_1_fu_370_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs3_fu_426_p2 = ((tmp_39_fu_398_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_408_p2 = ((tmp_1_5_fu_380_p1 == 23'd0) ? 1'b1 : 1'b0);

assign result = tmp;

assign tmp_1_2_fu_348_p1 = i_reg_168;

assign tmp_1_5_fu_380_p1 = max_2_to_int_fu_366_p1[22:0];

assign tmp_1_fu_370_p4 = {{max_2_to_int_fu_366_p1[30:23]}};

assign tmp_39_fu_398_p1 = max_to_int_fu_384_p1[22:0];

assign tmp_3_fu_388_p4 = {{max_to_int_fu_384_p1[30:23]}};

assign tmp_5_fu_414_p2 = (notrhs_fu_408_p2 | notlhs_fu_402_p2);

assign tmp_6_fu_432_p2 = (notrhs3_fu_426_p2 | notlhs2_fu_420_p2);

assign tmp_7_fu_438_p2 = (tmp_6_fu_432_p2 & tmp_5_fu_414_p2);

assign tmp_9_fu_444_p2 = (tmp_8_fu_316_p2 & tmp_7_fu_438_p2);

endmodule //keywords
